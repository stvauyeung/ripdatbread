bread = angular.module('bread', ['ui.router', 'ngCookies', 'breadControllers', 'ui.bootstrap', 'Directives', 'ripDatBreadModels', 'angularFileUpload', 'breadServices']);

bread.config(['$locationProvider', '$stateProvider', function($locationProvider, $stateProvider) {
  $locationProvider.html5Mode(true);
  $stateProvider
    .state('landing', {
      url: '/',
      templateUrl: '<%= asset_path("templates/static_pages/landing.html") %>',
      controller: 'StaticHomeCtrl',
      resolve: {
        recentBread: ['Bread', function(Bread) {
          return Bread.recentBread();
        }],
        currentUser: ['CurrentUser', function(CurrentUser) {
          return CurrentUser.get();
        }]
      }
    })
    .state('newSession', {
      url: '/login',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: 'SideNavCtrl',
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          controller: 'LoginCtrl',
          templateUrl: '<%= asset_path("templates/static_pages/login.html") %>'
        }
      }
    })
    .state('newUser', {
      url: '/users/new',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: 'SideNavCtrl',
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/user/new_user.html") %>',
          controller: 'NewUserCtrl'
        }
      }
    })
    .state('userShow', {
      url: '/users/:id',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/user_nav.html") %>',
          controller: 'UserNavCtrl',
          resolve: {
            showedUser: ['User', '$stateParams', function(User, $stateParams) {
              user = User.show($stateParams.id);
              return user;
            }],
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/user/show.html") %>',
          controller: 'UserShowCtrl',
          resolve: {
            showedUser: ['User', '$stateParams', function(User, $stateParams) {
              user = User.show($stateParams.id);
              return user;
            }]
          }
        }
      }
    })
    .state('newBread', {
      url: '/breads/new',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: 'SideNavCtrl',
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/bread/new_bread.html") %>',
          controller: 'NewBreadCtrl',
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        }
      }
    })
    .state('breadShow', {
      url: '/breads/:id',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: "SideNavCtrl",
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/bread/show.html") %>',
          controller: 'BreadShowCtrl',
          resolve: {
            showedBread: ['Bread', '$stateParams', function(Bread, $stateParams) {
              bread = Bread.show($stateParams.id);
              return bread;
            }],
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }],
            nextBread: ['Bread', function(Bread) {
              return Bread.nextBread();
            }] 
          }
        }
      }
    })
    .state('topBreads', {
      url: '/yummy',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: "SideNavCtrl",
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/bread/yummy.html") %>',
          controller: 'YummyBreadCtrl',
          resolve: {
            yummyBreads: ['Bread', function(Bread) {
              return Bread.yummyBread();
            }]
          }
        }
      }
    })
    .state('newBreads', {
      url: '/hot',
      views: {
        'nav@': {
          templateUrl: '<%= asset_path("templates/nav_bars/side_nav.html") %>',
          controller: "SideNavCtrl",
          resolve: {
            currentUser: ['CurrentUser', function(CurrentUser) {
              return CurrentUser.get();
            }]
          }
        },
        'main@': {
          templateUrl: '<%= asset_path("templates/bread/hot.html") %>',
          controller: 'HotBreadCtrl',
          resolve: {
            hotBreads: ['Bread', function(Bread) {
              return Bread.hotBread();
            }]
          }
        }
      }
    })
}]);